{"ast":null,"code":"var _jsxFileName = \"/Users/ak7l/Desktop/react-project/grocery-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport List from './List';\nimport Alert from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: \"\",\n    type: \"\"\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, 'danger', 'please enter value');\n    } else if (name && isEditing) {\n      setList(list.map(item => {\n        if (item.id === editId) {\n          return { ...item,\n            title: name\n          };\n        }\n\n        return item;\n      }));\n      setName(\"\");\n      setEditId(null);\n      setIsEditing(false);\n      showAlert(true, 'success', 'value changed');\n    } else {\n      showAlert(true, 'success', 'item added to the list');\n      const newItem = {\n        id: new Date().getTime().toString(),\n        title: name\n      };\n      setList([...list, newItem]);\n      setName('');\n    }\n  };\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({\n      show,\n      type,\n      msg\n    });\n  };\n\n  const clearList = () => {\n    showAlert(true, 'danger', 'empty list');\n    setList([]);\n  };\n\n  const removeItem = id => {\n    showAlert(true, 'danger', \"item removed\");\n    setList(list.filter(item => item.id !== id));\n  };\n\n  const editItem = id => {\n    const specificItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setName(specificItem.title);\n  };\n\n  useEffect(() => {}, [list]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"grocery-form\",\n      onSubmit: handleSubmit,\n      children: [alert.show && /*#__PURE__*/_jsxDEV(Alert, { ...alert,\n        removeAlert: showAlert,\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"grocery list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"grocery\",\n          placeholder: \"e.g. eggs\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: isEditing ? \"edit\" : \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), list.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grocery-container\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        items: list,\n        removeItem: removeItem,\n        editItem: editItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-btn\",\n        onClick: clearList,\n        children: \"clear items\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"NbyKOOa+9jLMR0l0J1ivVzbeoGs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ak7l/Desktop/react-project/grocery-list/src/App.js"],"names":["React","useState","useEffect","List","Alert","App","name","setName","list","setList","isEditing","setIsEditing","editId","setEditId","alert","setAlert","show","msg","type","handleSubmit","e","preventDefault","showAlert","map","item","id","title","newItem","Date","getTime","toString","clearList","removeItem","filter","editItem","specificItem","find","target","value","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport List from './List';\nimport Alert from './Alert';\n\n\nfunction App() {\n  const [name,setName] = useState(\"\");\n  const [list,setList] = useState([]);\n  const [isEditing,setIsEditing] = useState(false);\n  const [editId,setEditId] = useState(null);\n  const [alert,setAlert] = useState({show: false,msg:\"\",type:\"\" })\n\n  const handleSubmit = (e)=>{\n    e.preventDefault();\n   if(!name) {\n     showAlert(true,'danger','please enter value')\n   } else if(name && isEditing) {\n     setList(list.map (item=>{\n       if(item.id === editId){\n         return {...item, title: name}\n       }\n       return item;\n     }))\n     setName(\"\");\n     setEditId(null);\n     setIsEditing(false);\n     showAlert(true,'success','value changed')\n\n   }else{\n     showAlert(true,'success','item added to the list')\n     const newItem = {\n       id: new Date().getTime().toString(),\n       title: name\n    }\n    setList([...list, newItem]);\n    setName('')\n   }\n  \n\n  }\n\n  const showAlert = (show=false,type='',msg='') => {\n    setAlert({show,type,msg})\n  }\n  const clearList = ()=>{\n    showAlert(true,'danger','empty list')\n    setList([])\n  }\n  const removeItem = (id)=>{\nshowAlert(true, 'danger',\"item removed\")\nsetList(list.filter(item=> item.id !== id) )\n  }\n\n  const editItem = (id)=> {\n    const specificItem = list.find((item)=> item.id === id);\n    setIsEditing(true);\n    setEditId(id);\n    setName(specificItem.title)\n  }\n  useEffect(()=>{\n\n  },[list])\n\n  return (\n    <section className=\"section-center\">\n      <form \n      className=\"grocery-form\" \n      onSubmit={handleSubmit}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}\n        <h3>grocery list</h3>\n        <div className='form-control'>\n          <input \n          type='text' \n          className= \"grocery\" \n          placeholder=\"e.g. eggs\" \n          value={name}  \n          onChange={(e)=>setName(e.target.value)}/>\n          <button type='submit' className=\"submit-btn\">\n            {isEditing ? \"edit\" : \"submit\" }\n          </button>\n        </div>\n\n      </form>\n      {\n        list.length > 0 && (\n<div className=\"grocery-container\">\n        <List items={list} removeItem={removeItem} editItem={editItem}/>\n        <button className=\"clear-btn\" onClick= {clearList}>\n          clear items\n\n        </button>\n      </div> \n        )\n      }\n      \n    \n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}